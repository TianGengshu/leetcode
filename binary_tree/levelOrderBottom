# Definition for a binary tree node.
from collections import deque


class TreeNode:
    def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right


class Solution:
    def levelOrderBottom(self, root):
        if not root:
            return []
        result = deque([])
        queue = [root]

        while queue:
            temp = []
            for _ in range(len(queue)):
                node = queue.pop(0)
                temp.append(node.val)
                if node.left:
                    queue.append(node.left)
                if node.right:
                    queue.append(node.right)
            result.appendleft(temp)
        return list(result)


if __name__ == '__main__':
    # root = TreeNode(val=9, left=None, right=None), TreeNode(val=20, left=TreeNode(val=15, left=None, right=None), right=TreeNode(val=7, left=None, right=None)) # noqa
    # result = Solution().levelOrderBottom(root)
    # print(result)
    pass